{"version":3,"file":"core.cjs.production.min.js","sources":["../src/system.ts","../src/components/Box/Box.tsx","../src/components/Button/styles.ts","../src/components/Button/Button.tsx","../src/components/Flex/Flex.tsx","../src/components/Grid/Grid.tsx","../src/components/Input/styles.ts","../src/components/Input/Input.tsx","../src/components/Text/Text.tsx","../src/theme.ts","../src/components/ThemeProvider/ThemeProvider.tsx","../src/components/Global/Global.tsx"],"sourcesContent":["import { Box, BoxProps as SpaceColorProps } from 'theme-ui';\nimport { createShouldForwardProp } from '@styled-system/should-forward-prop';\nimport {\n  space,\n  color,\n  layout,\n  flexbox,\n  border,\n  position,\n  typography,\n  LayoutProps,\n  FlexboxProps,\n  BorderProps,\n  PositionProps,\n  TypographyProps as TypeProps,\n} from 'styled-system';\n\nexport const shouldForwardProp = createShouldForwardProp([\n  ...(space.propNames as string[]),\n  ...(color.propNames as string[]),\n  ...(layout.propNames as string[]),\n  ...(flexbox.propNames as string[]),\n  ...(position.propNames as string[]),\n]);\n\n/**\n * Base level typings, styled props, and component\n */\nexport type BaseProps = SpaceColorProps &\n  LayoutProps &\n  FlexboxProps &\n  BorderProps &\n  PositionProps;\n\nexport const baseStyleProps = [layout, flexbox, border, position];\n\nexport { Box as Base };\n\n/**\n * Core text typings, styled props, and component\n */\nexport type TypographyProps = TypeProps;\n\nexport const typographyStyleProps = [typography];\n","import styled from '@emotion/styled';\nimport { compose } from 'styled-system';\n\nimport { Base, BaseProps, baseStyleProps } from '../../system';\n\nexport type BoxProps = BaseProps;\n\n/**\n * Extend theme-ui Box with layout, flexbox, border, & position props\n */\nexport const Box = styled(Base)<BoxProps>(\n  {\n    boxSizing: 'border-box',\n    minWidth: 0,\n  },\n\n  compose(...baseStyleProps)\n);\n","import styled from '@emotion/styled';\nimport { compose, variant } from 'styled-system';\n\nimport { StyledButtonProps } from './Button';\nimport {\n  shouldForwardProp,\n  baseStyleProps,\n  typographyStyleProps,\n} from '../../system';\nimport { Box } from '../../components/Box';\n\nconst defaultextStyles = {\n  fontFamily: 'body',\n  fontWeight: 'body',\n  lineHeight: 'body',\n  color: 'text',\n  mt: 0,\n  mb: 0,\n};\n\nconst buttonVariants = variant({\n  variants: {\n    primary: {\n      ...defaultextStyles,\n      fontSize: 3,\n    },\n    secondary: {\n      ...defaultextStyles,\n      fontSize: 1,\n    },\n    bare: {\n      p: 0,\n    },\n  },\n});\n\nexport const Button = styled(Box, {\n  shouldForwardProp,\n})<StyledButtonProps>(\n  compose(...baseStyleProps, ...typographyStyleProps, buttonVariants)\n);\n","import React, { forwardRef } from 'react';\nimport { StyledComponent } from '@emotion/styled';\n\nimport { BaseProps, TypographyProps } from 'system';\nimport * as S from './styles';\n\nexport type StyledButtonProps = React.ComponentPropsWithoutRef<'button'> &\n  BaseProps &\n  TypographyProps;\n\nexport type ButtonProps = StyledComponent<'button', any, StyledButtonProps> & {\n  isLoading?: boolean;\n  variant?: 'primary' | 'secondary' | 'bare';\n};\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ children, variant = 'primary', ...rest }, ref) => (\n    <S.Button as={'button'} variant={variant} ref={ref as any} {...rest}>\n      {children}\n    </S.Button>\n  )\n);\n","import styled from '@emotion/styled';\nimport { compose } from 'styled-system';\n\nimport { Base, BaseProps, baseStyleProps } from '../../system';\n\nexport type FlexProps = BaseProps;\n\nexport const Flex = styled(Base)<FlexProps>(\n  {\n    display: 'flex',\n  },\n\n  compose(...baseStyleProps)\n);\n","import styled from '@emotion/styled';\nimport {\n  grid as gridStyleProps,\n  GridProps as _GridProps,\n  compose,\n} from 'styled-system';\n\nimport { Base, BaseProps, baseStyleProps } from '../../system';\n\nexport type GridProps = BaseProps & _GridProps;\n\nexport const Grid = styled(Base)<GridProps>(\n  {\n    display: 'grid',\n  },\n\n  compose(...baseStyleProps, gridStyleProps)\n);\n","import styled from '@emotion/styled';\n\nimport { BaseProps, shouldForwardProp } from '../../system';\nimport { Box } from '../../components/Box';\n\nexport const Input = styled(Box, {\n  shouldForwardProp,\n})<BaseProps>`\n  color: red;\n`;\n","import React, { forwardRef } from 'react';\nimport { StyledComponent } from '@emotion/styled';\n\nimport { BoxProps } from 'components';\nimport * as S from './styles';\n\nexport type StyledInputProps = React.ComponentPropsWithoutRef<'input'> &\n  BoxProps & {\n    isLoading?: boolean;\n  };\n\nexport type InputProps = StyledComponent<'input', any, StyledInputProps>;\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  ({ children, ...rest }, ref) => (\n    <S.Input as={'input'} ref={ref as any} {...rest}>\n      {children}\n    </S.Input>\n  )\n);\n","import styled from '@emotion/styled';\nimport {\n  typography as typgraphyStyleProps,\n  TypographyProps,\n  compose,\n} from 'styled-system';\nimport { variant } from 'styled-system';\n\nimport { Base, BaseProps, baseStyleProps } from '../../system';\n\nexport type TextProps = {\n  variant: 'body' | 'caption' | 'label';\n} & BaseProps &\n  TypographyProps;\n\nconst defaultextStyles = {\n  fontFamily: 'body',\n  fontWeight: 'body',\n  lineHeight: 'body',\n  color: 'text',\n  mt: 0,\n  mb: 0,\n};\n\nconst textVariants = variant({\n  variants: {\n    body: {\n      ...defaultextStyles,\n      fontSize: 2,\n    },\n    caption: {\n      ...defaultextStyles,\n      fontSize: 1,\n    },\n    label: {\n      ...defaultextStyles,\n      fonts: 'heading',\n      fontSize: 1,\n      fontWeight: 'medium',\n    },\n  },\n});\n\nexport const Text = styled(Base)<TextProps>(\n  compose(...baseStyleProps, typgraphyStyleProps, textVariants)\n);\n\nText.defaultProps = {\n  variant: 'body',\n  as: 'p',\n};\n","// import { lighten, darken } from 'polished';\n\n// export const fonts = {\n//   body:\n//     'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif',\n//   heading: 'Georgia, serif',\n//   monospace: 'Menlo, monospace',\n// };\n\n// export const fontSizes = [\n//   '0.625rem',\n//   '0.75rem',\n//   '1rem',\n//   '1.125rem',\n//   '1.25rem',\n//   '1.5rem',\n//   '1.75rem',\n//   '2rem',\n//   '2.5rem',\n//   '3rem',\n// ];\n\n// export const fontWeights = {\n//   regular: 400,\n//   medium: 500,\n//   bold: 700,\n// };\n\n// export const lineHeights = {\n//   solid: 1,\n//   title: 1.25,\n//   copy: 1.5,\n// };\n\n// export const letterSpacings = {\n//   default: 'normal',\n//   tracked: '0.04em',\n// };\n\n// export const space = [0, 4, 8, 16, 32, 64, 128, 256, 512];\n// export const sizes = [8, 16, 32, 64, 128, 256, 512, 768, 1024, 1536];\n\n// export const breakpoints = ['40em', '56em', '64em'];\n\n// export default {\n//   light: {\n//     space,\n//     sizes,\n//     fonts,\n//     fontSizes,\n//     fontWeights,\n//     lineHeights,\n//     letterSpacings,\n//     breakpoints,\n//     colors: {\n//       brand: {\n//         primary: '#012E86',\n//         secondary: '#0064D9',\n//         accent: '#DB7C00',\n//         muted: '#C6DAF7',\n//       },\n//       ui: {\n//         primary: '#262626',\n//         secondary: '#757575',\n//         tertiary: '#F1F1F1',\n//         quaternary: '#FFFFFF',\n//         disabled: '#DEDEDE',\n//         error: '#D0421B',\n//         success: '#138000',\n//       },\n//       bg: {\n//         primary: '#FFFFFF',\n//         secondary: '#F1F1F1',\n//       },\n//       text: {\n//         primary: '#262626',\n//         secondary: '#757575',\n//         disabled: '#9C9C9C',\n//         inverse: '#FFFFFF',\n//         error: '#D0421B',\n//         success: '#138000',\n//       },\n//       highlights: {\n//         primaryHighlight: darken(0.1, '#012E86'),\n//         primaryExtraHighlight: darken(0.2, '#012E86'),\n//         bgHighlight: darken(0.1, '#FFFFFF'),\n//       },\n//     },\n//   },\n//   dark: {\n//     space,\n//     sizes,\n//     fonts,\n//     fontSizes,\n//     fontWeights,\n//     lineHeights,\n//     letterSpacings,\n//     breakpoints,\n//     colors: {\n//       brand: {\n//         primary: '#298DFF',\n//         secondary: '#7CAEE8',\n//         accent: '#FDB447',\n//         muted: '#B7CBEA',\n//       },\n//       ui: {\n//         primary: '#FFFFFF',\n//         secondary: '#A1A1A1',\n//         tertiary: '#3C3C3C',\n//         quaternary: '#262626',\n//         disabled: '#242424',\n//         error: '#FF4D4D',\n//         success: '#1CBD00',\n//       },\n//       bg: {\n//         primary: '#111111',\n//         secondary: '#262626',\n//       },\n//       text: {\n//         primary: '#FFFFFF',\n//         secondary: '#A1A1A1',\n//         disabled: '#525252',\n//         inverse: '#262626',\n//         error: '#FF4D4D',\n//         success: '#1CBD00',\n//       },\n//       highlights: {\n//         primaryHighlight: lighten(0.1, '#298DFF'),\n//         primaryExtraHighlight: lighten(0.2, '#298DFF'),\n//         bgHighlight: lighten(0.1, '#111111'),\n//       },\n//     },\n//   },\n// };\n\nexport const theme = {\n  breakpoints: ['40em', '52em', '64em'],\n  space: [\n    0,\n    '.25rem',\n    '.5rem',\n    '1rem',\n    '2rem',\n    '4rem',\n    '8rem',\n    '16rem',\n    '32rem',\n  ],\n  fonts: {\n    body:\n      'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif',\n    heading: 'inherit',\n    monospace: 'Menlo, monospace',\n  },\n  fontSizes: [\n    '0.625rem',\n    '0.75rem',\n    '1rem',\n    '1.125rem',\n    '1.25rem',\n    '1.5rem',\n    '1.75rem',\n    '2rem',\n    '2.5rem',\n    '3rem',\n  ],\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#07c',\n    secondary: '#30c',\n    muted: '#f6f6f6',\n  },\n  text: {\n    heading: {\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n    },\n    h1: {\n      variant: 'text.heading',\n      fontSize: 5,\n    },\n    h2: {\n      variant: 'text.heading',\n      fontSize: 4,\n    },\n    h3: {\n      variant: 'text.heading',\n      fontSize: 3,\n    },\n    h4: {\n      variant: 'text.heading',\n      fontSize: 2,\n    },\n    h5: {\n      variant: 'text.heading',\n      fontSize: 1,\n    },\n    h6: {\n      variant: 'text.heading',\n      fontSize: 0,\n    },\n    pre: {\n      fontFamily: 'monospace',\n      overflowX: 'auto',\n      code: {\n        color: 'inherit',\n      },\n    },\n    code: {\n      fontFamily: 'monospace',\n      fontSize: 'inherit',\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'separate',\n      borderSpacing: 0,\n    },\n    th: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid',\n    },\n    td: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid',\n    },\n  },\n};\n","import React from 'react';\nimport {\n  ThemeProvider as ThemeDecorator,\n  ThemeProviderProps as ThemeDecoratorProps,\n} from 'theme-ui';\nimport { theme as defaultTheme } from '../../theme';\n\nconst merge = require('deepmerge');\n\nexport type HaikuThemeProviderProps = React.PropsWithChildren<{}> &\n  Partial<ThemeDecoratorProps<typeof defaultTheme>>;\n\nexport const ThemeProvider = (props: HaikuThemeProviderProps) => {\n  const { children, theme } = props;\n  const mergedTheme = theme ? merge(defaultTheme, theme) : defaultTheme;\n\n  return <ThemeDecorator theme={mergedTheme}>{children}</ThemeDecorator>;\n};\n","import React from 'react';\nimport { Global as BaseGlobal } from '@emotion/core';\n\nexport const Global = () => {\n  return (\n    <BaseGlobal\n      styles={theme => ({\n        '*': {\n          boxSizing: 'border-box',\n          color: theme.colors.text,\n        },\n      })}\n    />\n  );\n};\n"],"names":["shouldForwardProp","createShouldForwardProp","space","propNames","color","layout","flexbox","position","baseStyleProps","border","typographyStyleProps","typography","Box","styled","Base","boxSizing","minWidth","compose","defaultextStyles","fontFamily","fontWeight","lineHeight","mt","mb","buttonVariants","variant","variants","primary","fontSize","secondary","bare","p","Button","forwardRef","ref","children","rest","React","S","as","Flex","display","Grid","gridStyleProps","Input","textVariants","body","caption","label","fonts","Text","typgraphyStyleProps","defaultProps","theme","breakpoints","heading","monospace","fontSizes","fontWeights","bold","lineHeights","colors","text","background","muted","styles","root","h1","h2","h3","h4","h5","h6","pre","overflowX","code","table","width","borderCollapse","borderSpacing","th","textAlign","borderBottomStyle","td","merge","require","BaseGlobal","props","mergedTheme","defaultTheme","ThemeDecorator"],"mappings":"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"}